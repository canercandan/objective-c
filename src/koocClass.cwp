/**
 * @file koocClass.cwp
 * @brief rule \@class
 * @note @ref develop @ref contrib @ref tools
 *
 * @par koocClass
 * rule \@class
 */

koocClass ::=
#explicitCopy
"@class"
#continue #readIdentifier:sClass
'{'
  => local ctype;
  => insert ctype.pctx;
//  => ref ctype.pctx = this.gl_pctx;
  => insert ctype.type = "__COMPOSED__";
  => insert ctype.identifier = "kc_" + sClass.toLowerString();
  => insert ctype.infoType;
  => pushItem ctype.infoType;
  => insert ctype.infoType["typedef"] = "storageClassSpecifier";
  => insert ctype.specifier = "struct";
  => insert ctype.list;
  => insert this.kooc.classes[sClass];
  => insert this.kooc.classes[sClass].block;
  => pushItem this.kooc.classes[sClass].block;
  => insert this.kooc.classes[sClass].block#back.name = sClass;
  => insert this.kooc.classes[sClass].block#back.type = "__TYPE__";
  => insert this.kooc.classes[sClass].block#back.etype = "declaration";
  => if (!existVariable(this.kooc.classes[sClass].block.types))
     {insert this.kooc.classes[sClass].block.types;}
  => pushItem this.kooc.classes[sClass].block.types;
  => ref this.kooc.classes[sClass].block.types#back = this.kooc.classes[sClass].block#back;
  [koocMember(ctype.list)
   | declaration(this.kooc.classes[sClass].block) =>
   {
     localref theNode = this.kooc.classes[sClass].block#back;

     if (!existVariable(theNode.ctype.infoType))
       insert theNode.ctype.infoType;

     insert theNode.ctype.infoType["static"] = "storageClassSpecifier";
   }
   ]*
  => setall this.kooc.classes[sClass].block#back.ctype = ctype;
'}'
;
