import ::= #explicitCopy
[importModuleFromFile|importFile]
;

importModuleFromFile ::=
importPrefix #readIdentifier:module "from"
#readCString:file
;

importFile ::=
#try
importPrefix #continue #readCString:file
#catch(sError)
[checkFile(file, "")
 | => errorImport(sError);]
;

checkFile(file : value, module : value) ::=
=> local path = this.kooc.path_import + file;
=> local pathH = replaceString(".kh", ".h", path);
#check(path.existFile())
[
#check(!this.kooc.headers.findElement(pathH))
=> local nameH =
replaceString('.', '_',
 replaceString('/', '_',
  replaceString(".kh", ".h", file)));
=> deleteFile(pathH);
=> appendFile(pathH, "#ifndef __" + nameH + "__\n# define __" + nameH + "__\n\n");
=> {%>#include "@file@"@"\n\n"@<%}
=> insert this.kooc.headers[pathH];
#parsedFile(path)
[koocDeclaration(this.block)
 | declaration(this.block):res
   => appendFile(pathH, res + '\n');]*
=> appendFile(pathH, "\n#endif !__" + nameH + "__\n");
]
| => errorIncludeFile(this.kooc.path_import + file);
;

importPrefix ::= "@import";
