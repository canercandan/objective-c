declare function	parseInit(theNode : node);
declare function	parseBlock(theNode : node, file : value = "");
declare function	parseListEnum(theNode : node);
declare function	replaceChar(theNode : node);
declare function	parseList(theNode : node);
declare function	parseCType(theNode : node);

function	parseInit(theNode : node)
{
  local sResult = "";
  if (existVariable(theNode.designation))
    {
      if (theNode.designation.design == "indexed")
	sResult += "[" + theNode.designation.value + "]";
      else if (theNode.designation.design == "fieldname")
	sResult +=  theNode.designation.name + ": ";
    }
  sResult += testEType<theNode.init.etype>(theNode.init);
  return sResult;
}

function	parseBlock(theNode : node, file : value = "")
{
  local sResult = "";
  local isBlock = 0;

  if (existVariable(theNode.block))
    {
      foreach var in theNode.block
      {
	if (file == "" || file == var.__FILE__)
	  {
	    if (existVariable(var.etype))
	      sResult += testEType<var.etype>(var) + ";\n";
	    else if (existVariable(var.otype))
	      sResult += testOType<var.otype>(var);
	    else if (existVariable(var.init))
	      {
		sResult += parseInit(var);
		if !last(var) sResult += ", ";
	      }
	  }
      }
      isBlock = 1;
    }
  else
    {
      foreach var in theNode
      {
	if (file == "" || file == var.__FILE__)
	  {
	    if (existVariable(var.etype))
	      sResult += testEType<var.etype>(var) + ";\n";
	    else if (existVariable(var.otype))
	      sResult += testOType<var.otype>(var) ;
	    else if (existVariable(var.init))
	      {
		sResult += parseInit(var);
		if !last(var) sResult += ", ";
	      }
	  }
      }
    }
  if (isBlock == 1)
    return "\n{\n" + sResult + "\n}";
  return  sResult;
}

function	parseListEnum(theNode : node)
{
  local sResult = "";
  foreach var in theNode
  {
    sResult += key(var);
    if (!last(var)) sResult += ",\n";
  }
  return sResult;
}

function	replaceChar(theNode : node)
{
  return replaceString("\n", "\\n", theNode);
}


function	parseList(theNode : node)
{
  local sValue = "";
  foreach var in theNode
  {
    if (existVariable(var.value))
      sValue += replaceChar(var.value);
    else if (existVariable(var.etype))
      sValue += testEType<var.etype>(var);
    else if (existVariable(var.ctype.type))
      sValue += testOType<var.otype>(var);
    else if (existVariable(var.ctype.type))
      sValue += testType<var.ctype.type>(var);
    else if (existVariable(var.otype))
      sValue += testOType<var.otype>(var);
    if (!last(var)) sValue += ", ";
  }
  if (theNode.ellipsis == "true")
    sValue += ", ...";
  return (sValue);
}

function	parseCType(theNode : node)
{
  local sInfo = "";
  local sEnd = "";
  local sEType = "";
  local sPInfo = "";
  local sList = "";

  foreach info in theNode.infoType
  {sInfo += key(info) + " ";}
  if (theNode.specifier == "enum")
    sPInfo += "\n{\n" + parseListEnum(theNode.list) + "\n}";
  else if (existVariable(theNode.list))
    sPInfo += "\n{\n" + parseBlock(theNode.list) + "}";
  if (existVariable(theNode.etype))
    sEType = testEType<theNode.etype>(theNode);
  if existVariable(theNode.list)
		    sList += parseList(theNode.list) + ",\n";
  return sInfo + " " + sEType + theNode.sign + " " +
    theNode.specifier + " " +
    theNode.identifier + " " + sPInfo;
}
