declare function	errorIncludeFile(path : value);
declare function	errorImport(message : value);
declare function	existModule(name : value);
declare function	existVar(module : value, name : value, type : value);
declare function	existFunc(module : value, name : value, type : value, nb_arg : node);
declare function	countNbArgInFunc(theNode : node);
// declare function	existVarInFunc(module : value, name_func : value,
// 				       name_param : value, place : value);

function	errorIncludeFile(path : value)
{
  if (!path.existFile())
    {
      traceLine("#include \"" + path + "\" wasn't found");
      exit(-1);
    }
}

function	errorImport(message : value)
{
  traceLine(getInputFilename() + ":" + countInputLines() + ": "
    + "error: expected identifier after token @module");
  exit(-1);
  traceLine("syntax error in @import: " + message);
  exit(-1);
}

function	errorModule()
{
  traceLine(getInputFilename() + ":" + countInputLines() + ": "
    + "error: expected identifier after token @module");
  exit(-1);
}

function	existModule(name : value)
{
  if (!existVariable(this.kooc.modules))
     {
       traceLine("this.kooc.modules not found");
       exit(-1);
     }
//  traceObject(this.kooc, 9);
  foreach info in this.kooc.modules
  {
    if (key(info) == name)
      return (1);
  }
  traceLine("error - module " + name + " doesn't exist.");
  exit(-1);
}

function	existVar(module : value, name : value, type : value)
{
  local		mangle = 0;

  foreach info in this.kooc.modules
  {
    if (key(info) == module)
      {
	foreach val in info
	{
		if (val.type == "__VARIABLE__")
		{
			if (val.oname == name && mangle == 0 && type == "")
			   mangle = val.name;
			else if (val.oname == name && mangle != 0 && type == "")
			{
				traceLine("error - variable " + name + " have multiple type in " + module + ", please use @!() to specifie the type.");
		  		exit(-1);
			}
			else if (val.oname == name && val.ctype.identifier == type)
		  	     mangle = val.name;
		}
	}
      }
  }
  if (mangle != 0)
     return (mangle);
  traceLine("error - variable " + name + " doesn't exist in " + module + " module.");
  exit(-1);
}

function	existFunc(module : value, name : value, type : value, nb_arg : node)
{
  local		ret = 0;

  foreach info in this.kooc.modules
  {
    if (key(info) == module)
      {
	foreach val in info
	{
		if (val.type == "__PROTOTYPE__")
		{
		if (val.oname == name && ret == 0 && type == "")
		   ref ret = val;
		else if (val.oname == name && ret != 0 && type = "")
		{
		  traceLine("error - function " + name + " have multiple type in " + module + ", please use @!() to specifie the type.");
		  exit(-1);
		}
		else if (val.oname == name && val.ctype.identifier == type)
		  ref ret = val;
		}
	}
      }
  }
  if (ret != 0)
  {
     nb_arg = countNbArgInFunc(ret.list);
     return (ret.name);
  }
  traceLine("error - function " + name + " doesn't exist in " + module + " module.");
  exit(-1);
}

function	countNbArgInFunc(theNode : node)
{
  local	i = 0;
  foreach val in theNode
  { i = i + 1; }
  return (i);
}

// function	existVarInFunc(module : value, name_func : value, name_param : value, place : value)
// {
//   local		modules;
//   local		i = 0;

//   modules = this.kooc.modules;
//   foreach info in modules
//   {
//     if (key(info) == module)
//       {
// 	foreach val in info
// 	{
// 		if (key(val) == name_func)
// 		   {
// 			foreach param in val
// 			{
// 				if (key(param) == name_param && i == place)
// 				{
// 					return (param);
// 				}
// 				i = i + 1;
// 			}
// 		   }
// 	}
//       }
//   }
//   traceLine("error - param " + name_param + " doesn't exist in " + module + " module.");
//   exit(-1);
// }
