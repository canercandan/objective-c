/**
 * @file koocImplementation.cwp
 * @brief \@implementation grammar file
 * @note @ref develop @ref contrib @ref tools
 *
 * @par ExplicitCopy
 *
 * @par #koocImplementation
 * rule @implementation
 *
 * @par #addImplementation
 * add an implementation if a module whit the same name exist
 *
 * @todo @member { functions }
 * @bug generateString what the fuck Cedric!!! fixed by the
 * function prettyPrintExistFile
 */

/**
 * @cond
 */
koocImplementation ::=
#explicitCopy
  "@implementation" #continue #readIdentifier:sName
  => this.kooc.stack["class"] = sName;
  => local type = "";
=> local filenameC = "";
=> koocManglePushBlock(sName);
=> koocImplementationInit(sName, type, filenameC);
'{'
[
 "@member" #continue
 [
  declaration(this.block)
  => koocMemberAddSelf(sName, this.block#back);
  => koocImplementationErr();
  => koocImplementationAdd(sName, type);
  | '{' [declaration(this.block)
    	 => koocMemberAddSelf(sName, this.block#back);
	 => koocImplementationErr();
	 => koocImplementationAdd(sName, type);
	 ]*
  '}'
  ]
 | declaration(this.block)
=> koocImplementationErr();
=> koocImplementationAdd(sName, type);
 ]*
#generatedFile(this.kooc.stack["path_import"] + filenameC)
=> koocImplementationPrint(sName, type);
'}'
=> koocManglePopBlock();
;

/**
 * @endcond
 */
