/**
 * @file koocModule.cwp
 * @brief \@module grammar
 * @note @ref develop @ref contrib @ref tools
 *
 * @par koocModule(sModule : node)
 * rule \@module
 */

/**
 * @cond
 */
koocModule ::=
#explicitCopy
"@module"
#continue
[
//#try
#readIdentifier:sModule
 '{'
=> koocManglePushBlock(sModule);
  => sModule = koocMangleSpacer('.');
  => koocModuleInit(sModule);
  => local decl;
  => insert decl.block;
  [declaration(decl.block)
   => koocModuleCheck(decl.block#back);
   => pushItem this.block;
   => setall this.block#back = decl.block#back;
   => koocToolsAddRef(this.block#back);
   => koocModuleAdd(sModule);
  ]*
=> koocModuleContent(sModule);
#generatedFile(this.kooc.stack["path_import"]
 + this.kooc.modules[sModule].nameH)
=> koocModulePrint(sModule);
#generatedFile(this.kooc.stack["pathH"])
'}'
=> koocManglePopBlock();
=> this.kooc.stack["module"] = "";
/*#catch (sError)
|
=> errorModule();
*/]
;
/**
 * @endcond
 */
