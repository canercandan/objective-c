/**
 * @file koocModule.cwp
 * @brief \@module grammar
 * @note @ref develop @ref contrib @ref tools
 *
 * @par koocModule(sModule : node)
 * rule \@module
 */

/**
 * @cond
 */
koocModule(sModule : node) ::=
#explicitCopy
=> local access = "public";
[ "@public" | "@private" => access = "private"; ]? "@module"
#continue
[
//#try
#readIdentifier:sModule
'{'
  => { if (this.kooc.stack["package"] != "")
      sModule = this.kooc.stack["package"] + "." +  sModule;
  }
  => koocModuleInit(sModule, access);
  [declaration(this.block)
   => koocModuleErr();
   => koocModuleAdd(sModule);
  ]*
=> koocModuleContent(sModule);
#generatedFile(this.kooc.stack["path_import"] + this.kooc.modules[sModule].nameH)
=> koocModulePrint(sModule);
#generatedFile(this.kooc.stack["pathH"])
'}'
/*#catch (sError)
|
=> errorModule();
*/]
;
/**
 * @endcond
 */
