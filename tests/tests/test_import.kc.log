[KOOC] Processing: [tests/test_import.kc] to [./tests/test_import.c].
[KOOC] Done.
==== BEGIN ./tests/test_import.c ====

 /* faite attention au commentaire inutile */
 // oui je sais c en C++ mais comme GCC le prend :)

				     




  							
  				
  				// pourquoi 13!!peut pas avoir plus 10 milliard

                     
  
  
  
    
   
                     
  
  




==== END ./tests/test_import.c ====
==== BEGIN ./tests/test_import.ktree ====
<project>
	<block>
		<__ARRAY_ENTRY __KEY="0">
			<__LINE__ __VALUE="5" />
			<ctype>
				<pctx __REFERENCE="project.block" />
				<type __VALUE="__PRIMARY__" />
				<identifier __VALUE="int" />
				<sign __VALUE="signed" />
			</ctype>
			<type __VALUE="__FUNCTION__" />
			<etype __VALUE="declaration" />
			<name __VALUE="main" />
			<list>
				<__ARRAY_ENTRY __KEY="0">
					<ctype>
						<pctx __REFERENCE="project.block" />
						<type __VALUE="__PRIMARY__" />
						<identifier __VALUE="int" />
						<sign __VALUE="signed" />
					</ctype>
					<type __VALUE="__VARIABLE__" />
					<etype __VALUE="declaration" />
					<name __VALUE="ac" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="1">
					<ctype>
						<pctx __REFERENCE="project.block" />
						<type __VALUE="__PRIMARY__" />
						<identifier __VALUE="char" />
						<sign __VALUE="signed" />
						<pointer>
							<__ARRAY_ENTRY __KEY="0">
								<level __VALUE="*" />
							</__ARRAY_ENTRY>
							<__ARRAY_ENTRY __KEY="1">
								<level __VALUE="*" />
							</__ARRAY_ENTRY>
						</pointer>
					</ctype>
					<type __VALUE="__VARIABLE__" />
					<etype __VALUE="declaration" />
					<name __VALUE="av" />
				</__ARRAY_ENTRY>
			</list>
			<otype __VALUE="rootblock" />
			<block>
				<__ARRAY_ENTRY __KEY="0">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="test_t" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<operator __VALUE="*" />
					<right>
						<type __VALUE="primary_expression" />
						<value __VALUE="test" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</right>
					<type __VALUE="multiplicative_expression" />
					<otype __VALUE="binary" />
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="7" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="1">
					<__LINE__ __VALUE="8" />
					<ctype>
						<pctx __REFERENCE="project.block[&quot;0&quot;].block" />
						<type __VALUE="__PRIMARY__" />
						<identifier __VALUE="char" />
						<sign __VALUE="signed" />
						<array __VALUE="1">
							<__ARRAY_ENTRY __KEY="0" __VALUE="MAXBUF" />
						</array>
					</ctype>
					<type __VALUE="__VARIABLE__" />
					<etype __VALUE="declaration" />
					<name __VALUE="my_buf" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="2">
					<__LINE__ __VALUE="9" />
					<ctype>
						<pctx __REFERENCE="project.block[&quot;0&quot;].block" />
						<type __VALUE="__PRIMARY__" />
						<identifier __VALUE="char" />
						<sign __VALUE="signed" />
						<array __VALUE="1">
							<__ARRAY_ENTRY __KEY="0" __VALUE="13" />
						</array>
					</ctype>
					<type __VALUE="__VARIABLE__" />
					<etype __VALUE="declaration" />
					<name __VALUE="fmt" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="3">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="test" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<operator __VALUE="=" />
					<right>
						<left>
							<type __VALUE="primary_expression" />
							<value __VALUE="test_new" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</left>
						<type __VALUE="call_expression" />
						<otype __VALUE="call" />
						<operator __VALUE="()" />
						<list>
							<__ARRAY_ENTRY __KEY="0">
								<type __VALUE="primary_expression" />
								<value __VALUE="&quot;KOOC rulez
&quot;" />
								<ctype>
									<infoType>
										<__ARRAY_ENTRY __KEY="const" __VALUE="typeQualifier" />
									</infoType>
									<identifier __VALUE="char" />
									<pointer>
										<__ARRAY_ENTRY __KEY="0">
											<level __VALUE="*" />
										</__ARRAY_ENTRY>
									</pointer>
								</ctype>
								<operator __VALUE="literal" />
								<otype __VALUE="terminal" />
							</__ARRAY_ENTRY>
						</list>
					</right>
					<type __VALUE="assignement_expression" />
					<otype __VALUE="binary" />
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="11" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="4">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="test_print" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="test" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="12" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="5">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="free" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="test" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="13" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="6">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="printf" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="&quot;Tape un truc (c-D pour finir):&quot;" />
							<ctype>
								<infoType>
									<__ARRAY_ENTRY __KEY="const" __VALUE="typeQualifier" />
								</infoType>
								<identifier __VALUE="char" />
								<pointer>
									<__ARRAY_ENTRY __KEY="0">
										<level __VALUE="*" />
									</__ARRAY_ENTRY>
								</pointer>
							</ctype>
							<operator __VALUE="literal" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="14" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="7">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="sprintf" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="fmt" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
						<__ARRAY_ENTRY __KEY="1">
							<type __VALUE="primary_expression" />
							<value __VALUE="&quot;%%%ds&quot;" />
							<ctype>
								<infoType>
									<__ARRAY_ENTRY __KEY="const" __VALUE="typeQualifier" />
								</infoType>
								<identifier __VALUE="char" />
								<pointer>
									<__ARRAY_ENTRY __KEY="0">
										<level __VALUE="*" />
									</__ARRAY_ENTRY>
								</pointer>
							</ctype>
							<operator __VALUE="literal" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
						<__ARRAY_ENTRY __KEY="2">
							<type __VALUE="primary_expression" />
							<value __VALUE="MAXBUF" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="15" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="8">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="scanf" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="fmt" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
						<__ARRAY_ENTRY __KEY="1">
							<type __VALUE="primary_expression" />
							<value __VALUE="my_buf" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="16" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="9">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="test" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<operator __VALUE="=" />
					<right>
						<left>
							<type __VALUE="primary_expression" />
							<value __VALUE="test_new" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</left>
						<type __VALUE="call_expression" />
						<otype __VALUE="call" />
						<operator __VALUE="()" />
						<list>
							<__ARRAY_ENTRY __KEY="0">
								<type __VALUE="primary_expression" />
								<value __VALUE="my_buf" />
								<operator __VALUE="id" />
								<otype __VALUE="terminal" />
							</__ARRAY_ENTRY>
						</list>
					</right>
					<type __VALUE="assignement_expression" />
					<otype __VALUE="binary" />
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="17" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="10">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="test_print" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="test" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="18" />
				</__ARRAY_ENTRY>
				<__ARRAY_ENTRY __KEY="11">
					<left>
						<type __VALUE="primary_expression" />
						<value __VALUE="free" />
						<operator __VALUE="id" />
						<otype __VALUE="terminal" />
					</left>
					<type __VALUE="call_expression" />
					<otype __VALUE="call" />
					<operator __VALUE="()" />
					<list>
						<__ARRAY_ENTRY __KEY="0">
							<type __VALUE="primary_expression" />
							<value __VALUE="test" />
							<operator __VALUE="id" />
							<otype __VALUE="terminal" />
						</__ARRAY_ENTRY>
					</list>
					<etype __VALUE="expression" />
					<__LINE__ __VALUE="19" />
				</__ARRAY_ENTRY>
				<pctx __REFERENCE="project.block" />
				<variables>
					<__ARRAY_ENTRY __KEY="my_buf" __REFERENCE="project.block[&quot;0&quot;].block[&quot;1&quot;]" />
					<__ARRAY_ENTRY __KEY="fmt" __REFERENCE="project.block[&quot;0&quot;].block[&quot;2&quot;]" />
				</variables>
			</block>
		</__ARRAY_ENTRY>
		<pctx />
		<functions>
			<__ARRAY_ENTRY __KEY="main" __REFERENCE="project.block[&quot;0&quot;]" />
		</functions>
	</block>
	<gl_pctx __REFERENCE="project.block[&quot;0&quot;].block" />
	<kooc>
		<modules />
		<headers>
			<__ARRAY_ENTRY __KEY="tests/test_import.kh" />
		</headers>
		<class />
		<path_import __VALUE="tests/" />
	</kooc>
</project>

==== END ./tests/test_import.ktree ====
